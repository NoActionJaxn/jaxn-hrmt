---
import { StrapiBlocks } from "@sensinum/astro-strapi-blocks";
import Layout from "../../layouts/Layout.astro";
import LayoutFrame from "../../layouts/LayoutFrame.astro";
import StrapiImage from "../../components/shared/StrapiImage.astro";
import Tag from "../../components/shared/Tag.astro";
import { fetchBlogPostsPaginated } from "../../lib/requests";
import type { BlogPost, StrapiEntity } from "../../types/strapi";
import { formatDate } from "../../lib/helpers";

export async function getStaticPaths() {
  const blogPosts = await fetchBlogPostsPaginated({});

  return blogPosts?.data?.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = StrapiEntity<BlogPost>;

const {
  title,
  coverImage,
  content,
  createdAt,
  updatedAt,
  tags = [],
} = Astro.props;

const isUpdated = createdAt !== updatedAt;
---

<Layout>
  <LayoutFrame>
    <article class="space-y-6 col-span-3">
      <div class="text-[12px] text-gruvbox-fg5 space-y-2">
        <h2 class="text-6xl tracking-wide font-gnuolane font-bold uppercase">
          {title}
        </h2>
        {
          isUpdated ? (
            <p>
              Last Updated{" "}
              {formatDate(new Date(updatedAt))}
            </p>
          ) : (
            <p>
              Published{" "}
              {formatDate(new Date(createdAt))}
            </p>
          )
        }
      </div>
      {
        coverImage && (
          <StrapiImage
            size="medium"
            image={coverImage?.[0]}
            className="w-full aspect-video"
          />
        )
      }
      <StrapiBlocks data={content as any} class="custom-class" />
      <div class="flex flex-wrap gap-2 mb-4">
        {tags.map((tag) => <Tag tag={tag} />)}
      </div>
    </article>
  </LayoutFrame>
</Layout>
